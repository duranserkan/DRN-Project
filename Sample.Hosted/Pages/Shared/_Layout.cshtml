@{
    var headers = Context.Request.Headers;
    var isHtmxRequest = headers.ContainsKey("HX-Request") && headers["HX-Request"] == "true";

    Layout = "_LayoutBase";
    if (isHtmxRequest) 
        Layout = "_LayoutBaseHtmx";

    var centerVertically = ViewData.TryGetValue(ViewDataFor.CenterVertically, out var flexColumnValue) && flexColumnValue is true;
    var statusMessage = TempData[TempDataFor.StatusMessage] as string;
}

<partial name="_Navbar"/>

<div class="container d-flex flex-grow-1 p-0 bg-body bg-gradient" style="overflow: hidden; box-sizing: border-box; ">
    @if (ScopeContext.MFACompleted)
    {
        <partial name="_Sidebar"/>
    }

    <div class="d-flex flex-column flex-grow-1" style="overflow-y: hidden;">
        @if (ScopeContext.MFACompleted)
        {
            <partial name="_SubNavigation"/>
        }
        <aside>
            @await RenderSectionAsync("MainTop", required: false)
        </aside>

        @if (!string.IsNullOrWhiteSpace(statusMessage))
        {
            <aside class="alert alert-success alert-dismissible mb-0 mt-1 mx-3">
                <div role="alert">
                    @TempData[TempDataFor.StatusMessage]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            </aside>
        }

        <!-- Main content -->
        <div class=" d-flex  @(centerVertically ? "flex-column" : "") justify-content-center flex-grow-1" style="overflow-y: auto;">
            <main class="p-3 @(centerVertically ? "" : "flex-grow-1")" style="max-width: 100%;">
                @if (ViewData[ViewDataFor.MainContentAsCard] is true || ViewData[ViewDataFor.MainContentAsCardBody] is true)
                {
                    <div class="card m-0">
                        @if (ViewData[ViewDataFor.MainContentCardTitle] is string cardTitle)
                        {
                            <div class="card-header"><h2 class="mb-0">@cardTitle</h2></div>
                        }
                        @if (ViewData[ViewDataFor.MainContentAsCardBody] is true)
                        {
                            <div class="card-body">@RenderBody()</div>
                        }
                        else
                        {
                            @RenderBody()
                        }
                    </div>
                }
                else
                {
                    @RenderBody()
                }
            </main>
        </div>

        <aside>
            @await RenderSectionAsync("MainBottom", required: false)
        </aside>
    </div>
    @if (ScopeContext.MFACompleted)
    {
        <partial name="_SidebarActionbar"/>
    }
</div>

<partial name="_Footer"/>

@section LayoutBaseScripts {
    @await RenderSectionAsync("Scripts", required: false)
}