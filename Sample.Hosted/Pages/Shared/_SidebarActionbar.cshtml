@using DRN.Framework.SharedKernel.Enums
@using DRN.Framework.Utils.Models
@{
    var index = 0;
    var actionCount = SidebarActionCollection.DefaultItems.Count;
    var sidebarActionCollection = ViewData[Get.ViewDataKeys.SidebarActionCollection] as SidebarActionCollection ?? new SidebarActionCollection();
}

<aside class="d-flex p-1 bg-body-tertiary flex-column align-items-center">
    <nav class="flex-grow-1" style="overflow-y:auto; overflow-x: hidden">
        <ul id="ActionbarActionList" class="nav nav-pills nav-flush flex-column mt-1 mb-auto">
            @foreach (var navItem in sidebarActionCollection.Items)
            {
                var borderBottom = ++index == actionCount ? "border-bottom" : "";
                var canvasId = $"#offCanvasSidebarAction{navItem.Id}";
                <li class="nav-item">
                    <div title="@navItem.Title" data-bs-toggle="tooltip" data-bs-placement="left">
                        <button class="btn btn-light nav-link d-flex align-items-center py-2 @borderBottom border-top rounded-0" type="button"
                                data-bs-toggle="offcanvas" data-bs-target="@canvasId">
                            <span class="position-relative">
                                <i class="bi @navItem.Icon" style="font-size: 1.25em;" role="img" aria-label="@navItem.Title"></i>
                                @if (!string.IsNullOrWhiteSpace(navItem.BadgeContent))
                                {
                                    <span style="font-size: 0.7rem;"
                                          class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">@navItem.BadgeContent
                                        @if (!string.IsNullOrWhiteSpace(navItem.BadgeVisuallyHiddenContent))
                                        {
                                            <span class="visually-hidden">@navItem.BadgeVisuallyHiddenContent</span>
                                        }
                                    </span>
                                }
                            </span>
                        </button>
                    </div>
                </li>
            }
        </ul>
    </nav>
    <nav style="overflow-y:auto; overflow-x: hidden">
        <ul id="ActionBarBadgeList" class="nav nav-pills nav-flush flex-column mt-1 mb-auto">
            @if (ScopeContext.Settings.Environment != AppEnvironment.Production)
            {
                @if (ScopeContext.Settings.Environment == AppEnvironment.Development)
                {
                    var developmentStatus = ScopeContext.Services.GetRequiredService<DevelopmentStatus>();
                    @if (developmentStatus.HasPendingChanges)
                    {
                        <li class="nav-item">
                            <div title="Has Pending Changes" data-bs-toggle="tooltip" data-bs-placement="left">
                                <span class="btn btn-light nav-link d-flex align-items-center py-2 rounded-0" type="button">
                                    <i class="bi bi-plus-circle-dotted text-primary" style="font-size: 1.25em;" role="img"></i>
                                </span>
                            </div>
                        </li>
                    }

                    @if (ScopeContext.Settings.DevelopmentSettings.Prototype)
                    {
                        <li class="nav-item">
                            <div title="Prototyping Enabled" data-bs-toggle="tooltip" data-bs-placement="left">
                                <span class="btn btn-light nav-link d-flex align-items-center py-2 rounded-0" type="button">
                                    <i class="bi bi-wrench-adjustable text-primary" style="font-size: 1.25em;" role="img"></i>
                                </span>
                            </div>
                        </li>
                    }

                    @if (ScopeContext.Settings.DevelopmentSettings.AutoMigrate)
                    {
                        <li class="nav-item">
                            <div title="Auto Migration Enabled" data-bs-toggle="tooltip" data-bs-placement="left">
                                <span class="btn btn-light nav-link d-flex align-items-center py-2 rounded-0" type="button">
                                    <i class="bi bi-robot text-primary" style="font-size: 1.25em;" role="img"></i>
                                </span>
                            </div>
                        </li>
                    }

                    @if (ScopeContext.Settings.DevelopmentSettings.LaunchExternalDependencies)
                    {
                        <li class="nav-item">
                            <div title="External Dependencies Launched" data-bs-toggle="tooltip" data-bs-placement="left">
                                <span class="btn btn-light nav-link d-flex align-items-center py-2 rounded-0" type="button">
                                    <i class="bi bi-plugin text-primary" style="font-size: 1.25em;" role="img"></i>
                                </span>
                            </div>
                        </li>
                    }
                }

                var environment = $"{ScopeContext.Settings.Environment.ToString()} Environment";
                <li class="nav-item">
                    <div title="@environment" data-bs-toggle="tooltip" data-bs-placement="left">
                        <span class="btn btn-light nav-link d-flex align-items-center py-2 rounded-0">
                            <i class="bi bi-exclamation-triangle text-primary" style="font-size: 1.25em;" role="img"></i>
                        </span>
                    </div>
                </li>
            }
        </ul>
    </nav>
</aside>

@foreach (var navItem in SidebarActionCollection.DefaultItems)
{
    var canvasId = $"offCanvasSidebarAction{navItem.Id}";
    var canvasLabelId = $"offCanvasSidebarActionLabel{navItem.Id}";
    var partialName = $"_SidebarActionbarItem{navItem.Id}";
    <div class="offcanvas offcanvas-end" data-bs-scroll="true" tabindex="-1" id="@canvasId" role="dialog" aria-modal="true" aria-labelledby="@canvasLabelId">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="@canvasLabelId">@navItem.Title</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <partial name="@partialName" model="navItem"/>
        </div>
    </div>
}