# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
name: master
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup .NET # SDK installation
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
      - name: Restore dependencies # Restore, build, test
        run: dotnet restore DRN.sln
      - name: Build
        run: dotnet build DRN.sln --no-restore --no-incremental
      - name: Test
        run: dotnet test DRN.Test/DRN.Test.csproj --no-build --verbosity normal
      - name: Cache SonarCloud scanner # Sonar scan tools installation and cache
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          New-Item -Path ./.sonar/scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
      - name: Cache dotnet-coverage
        id: cache-dotnet-coverage
        uses: actions/cache@v3
        with:
          path: ./.sonar/coverage
          key: ${{ runner.os }}-sonar-dotnet-coverage
          restore-keys: ${{ runner.os }}-sonar-dotnet-coverage
      - name: Install dotnet-coverage
        if: steps.cache-dotnet-coverage.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          New-Item -Path ./.sonar/coverage -ItemType Directory
          dotnet tool update dotnet-coverage --tool-path ./.sonar/coverage
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Build and analyze  # Sonar scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        shell: pwsh
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"duranserkan_DRN-Project" /o:"duranserkan" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.host.url="https://sonarcloud.io"
          dotnet build DRN.sln --no-restore --no-incremental
          ./.sonar/coverage/dotnet-coverage collect "dotnet test DRN.Test/DRN.Test.csproj --no-build" -f xml -o "coverage.xml"
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"