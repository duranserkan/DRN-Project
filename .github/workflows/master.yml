name: master

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-sonar-scan:
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_PROJECT_KEY: duranserkan_DRN-Project
      SONAR_HOST_URL: https://sonarcloud.io
      SONAR_ORGANIZATION: duranserkan
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup SDK
        uses: ./.github/workflows/actions/setup-sdk-and-tools

      - name: Sonar Scan Begin
        uses: ./.github/workflows/actions/sonar-begin

      - name: Build for Sonar Scan
        uses: ./.github/workflows/actions/dotnet-build-release

      - name: Test
        run: ./.sonar/coverage/dotnet-coverage collect "dotnet test DRN.Test/DRN.Test.csproj --no-build --verbosity normal" -f xml -o "coverage.xml"

      - name: Sonar Scan End
        uses: ./.github/workflows/actions/sonar-end

  codeql-scan:
    permissions:
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup SDK
        uses: ./.github/workflows/actions/setup-sdk-and-tools

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: csharp,javascript

      - name: Build for CodeQL
        uses: ./.github/workflows/actions/dotnet-build-release

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  gatekeeper:
    runs-on: ubuntu-latest
    needs:
      - build-and-sonar-scan
      - codeql-scan
    steps:
      - name: Verify All Scans Completed Successfully
        run: |
          echo "All scans passed successfully!"